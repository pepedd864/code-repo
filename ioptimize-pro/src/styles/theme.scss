@import 'variables.module';
//模式切换
$modes: (
  light: (
    bgColor: #fafafa,
    bg1color: #fff,
    cardBgColor: #fff,
    containerBgColor: #fafafa,
    boxShadowColor: rgba(0, 0, 0, 0.1),
    borderColor: #f0f0f0,
    infoColor: #000,
    textColor: #000,
  ),
  dark: (
    bgColor: #000,
    bg1color: #000,
    cardBgColor: #141414,
    containerBgColor: #050505,
    boxShadowColor: rgba(255, 255, 255, 0.1),
    borderColor: #303030,
    infoColor: #f4f4f4,
    textColor: #fff,
  ),
);

// 使用混合时可以根据当前模式和主题来切换样式
$curMode: light;
$curTheme: red;
@mixin useTheme() {
  @each $key1, $value1 in $modes {
    $curMode: $key1 !global;
    @each $key2, $value2 in $colors {
      $curTheme: $key2 !global;
      html[data-dark='#{$key1}'][data-theme='#{"" + $key2}'] & {
        @content;
      }
    }
  }
}

// 获取当前模式 可以配合sass的 @if @else 使用
@function getMode() {
  @return $curMode;
}

// 获取当前模式下的变量
@function getModeVar($key) {
  $modeMap: map-get($modes, $curMode);
  @return map-get($modeMap, $key);
}

// 获取当前主题下的变量
@function getColor($key) {
  $themeMap: map-get($colors, $curTheme);
  @return map-get($themeMap, $key);
}
